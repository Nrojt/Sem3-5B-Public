name: Unified Release Workflow

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  run-test-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger .NET Workflow
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type": "trigger-dotnet-job"}'

      - name: Trigger Node.js Workflow
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type": "trigger-nodejs-job"}'

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Build React App
      - name: Build React App with Node.js '20.x'
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: reactapp/package-lock.json

      - name: Install Dependencies
        working-directory: ./reactapp
        run: npm install

      # Build reactapp
      - name: Build React App
        working-directory: ./reactapp
        run: npm run build
        env:
          # Set any necessary environment variables here
          NODE_ENV: production
          DISABLE_HTTPS: "true"

      # Zip React App Build
      - name: Zip React App Build
        working-directory: ./reactapp
        run: zip -r reactapp-build.zip dist

      # Build .NET WebAPI
      - name: Configure .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"
      - name: Build .NET WebAPI
        working-directory: ./webapi
        run: |
          dotnet restore
          dotnet build --configuration Release

      # Zip .NET WebAPI Build
      - name: List contents of the build directory
        working-directory: ./webapi
        run: ls -la ./bin/Release/net8.0

      - name: Zip .NET WebAPI Build
        working-directory: ./webapi
        run: zip -r webapi-build.zip ./bin/Release/net8.0

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: unified-release-${{ github.run_number }}
          release_name: Unified Release ${{ github.run_number }}
          body: |
            Release of new build. Auto-generated by GitHub Actions.
          draft: false
          prerelease: false
      # Capture the upload_url
      - name: Set Release URL Output
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

      # Upload React App Build to Release
      - name: Upload React App Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: reactapp/reactapp-build.zip
          asset_name: reactapp-build.zip
          asset_content_type: application/zip

      # Upload .NET WebAPI Build to Release
      - name: Upload .NET WebAPI Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: webapi/webapi-build.zip
          asset_name: webapi-build.zip
          asset_content_type: application/zip
